{"version":3,"sources":["webpack:///path---posts-linked-lists-in-c-49442391827ce5a6bd28.js","webpack:///./.cache/json/posts-linked-lists-in-c.json"],"names":["webpackJsonp","558","module","exports","data","site","siteMetadata","title","markdownRemark","html","frontmatter","author","date","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,WAAkBC,gBAAmBC,KAAA,qsBAAisBC,aAAgCH,MAAA,oBAAAI,OAAA,uBAAAC,KAAA,oBAAsFC,aAAgBC,KAAA","file":"path---posts-linked-lists-in-c-49442391827ce5a6bd28.js","sourcesContent":["webpackJsonp([98253788769562],{\n\n/***/ 558:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"MyBlog\"}},\"markdownRemark\":{\"html\":\"<pre><code class=\\\"language-c\\\">#include &#x3C;stdio.h>\\n#include &#x3C;stdlib.h>\\n\\ntypedef struct Node {\\n    Node *next;\\n    int data;\\n}\\n\\nint search(Node *list, int x) {\\n    Node *ptr;\\n    ptr = list;\\n    while(ptr) {\\n        if(pt->data == x) return 1; // Number found\\n        ptr = ptr->Next;\\n    }\\n    return 0; // Number not found\\n}\\n\\nint main() {\\n    uint8_t result;\\n    Node linkedList[3] = {\\n        {&#x26;LinkedList[1], 1},\\n        {&#x26;LinkedList[2], 10},\\n        {NULL, 100}\\n    };\\n    result = search(linkedList, 9); // LinkedList = &#x26;LinkedList[0]\\n    if(result) printf(\\\"Number found!\\\\n\\\");\\n    else printf(\\\"Number not found!\\\\n\\\");\\n    return 0;\\n}\\n</code></pre>\",\"frontmatter\":{\"title\":\"Linked lists in C\",\"author\":\"Maximiliano Valencia\",\"date\":\"21 March, 2018\"}}},\"pathContext\":{\"slug\":\"/posts/linked_lists_in_c/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---posts-linked-lists-in-c-49442391827ce5a6bd28.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"MyBlog\"}},\"markdownRemark\":{\"html\":\"<pre><code class=\\\"language-c\\\">#include &#x3C;stdio.h>\\n#include &#x3C;stdlib.h>\\n\\ntypedef struct Node {\\n    Node *next;\\n    int data;\\n}\\n\\nint search(Node *list, int x) {\\n    Node *ptr;\\n    ptr = list;\\n    while(ptr) {\\n        if(pt->data == x) return 1; // Number found\\n        ptr = ptr->Next;\\n    }\\n    return 0; // Number not found\\n}\\n\\nint main() {\\n    uint8_t result;\\n    Node linkedList[3] = {\\n        {&#x26;LinkedList[1], 1},\\n        {&#x26;LinkedList[2], 10},\\n        {NULL, 100}\\n    };\\n    result = search(linkedList, 9); // LinkedList = &#x26;LinkedList[0]\\n    if(result) printf(\\\"Number found!\\\\n\\\");\\n    else printf(\\\"Number not found!\\\\n\\\");\\n    return 0;\\n}\\n</code></pre>\",\"frontmatter\":{\"title\":\"Linked lists in C\",\"author\":\"Maximiliano Valencia\",\"date\":\"21 March, 2018\"}}},\"pathContext\":{\"slug\":\"/posts/linked_lists_in_c/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/posts-linked-lists-in-c.json\n// module id = 558\n// module chunks = 98253788769562"],"sourceRoot":""}