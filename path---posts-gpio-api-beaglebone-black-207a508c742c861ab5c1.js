webpackJsonp([0x86ab6e618715],{549:function(e,a){e.exports={data:{site:{siteMetadata:{title:"MyBlog"}},markdownRemark:{html:"<p>En este post vamos a hacer una API usando Javascript para controlar los LEDs\nde la Beaglebone Black.</p>\n<p>Primero, requerimos los módulos necesarios para crear el servidor y para accesar\na los GPIOs:</p>\n<pre><code class=\"language-Javascript\">    #!/usr/bin/env node\n    var b = require('bonescript')\n    var http = require('http')\n    var url = require('url')\n</code></pre>\n<p>Inicializamos los GPIOs de los LEDs como salidas y escribimos un valor de LOW:</p>\n<pre><code class=\"language-Javascript\">    var state = [b.LOW, b.LOW, b.LOW, b.LOW]\n    var leds = [\"USR0\", \"USR1\", \"USR2\", \"USR3\"]\n\n    for (var i in leds) {\n        b.pinMode(leds[i], b.OUTPUT)\n        b.digitalWrite(leds[i], state[i])\n    }\n</code></pre>\n<p>Creamos el servidor con el módulo http y definimos la función para manejar las\npeticiones del cliente:</p>\n<pre><code class=\"language-Javascript\">    http.createServer(function (req, res) {\n        var urlReq = url.parse(req.url, true).pathname\n        var query = url.parse(req.url, true).query\n        switch(urlReq) {\n            case '/USR0':\n                res.writeHead(200, {'Content-Type': 'text/html'})\n                setState(0, query.state) // Set state received from query\n                break\n            case '/USR1':\n                res.writeHead(200, {'Content-Type': 'text/html'})\n                setState(1, query.state) // Set state received from query\n                break\n            case '/USR2':\n                res.writeHead(200, {'Content-Type': 'text/html'})\n                toggle(2) // Toggle the LED USR2\n                break\n            default:\n                res.writeHead(404, {'Content-Type': 'text/html'})\n                res.write(req.url + ' Not Found!')\n        }\n        res.end()\n    }).listen(3001)\n</code></pre>\n<p>Definimos las funciones para escribir a los GPIOs y creamos una función periódica\npara saber que nuestro programa está corriendo:</p>\n<pre><code class=\"language-Javascript\">    setInterval( () => {\n        toggle(3)\n    }, 1000)\n\n    function toggle(i) {\n        if(state[i] == b.LOW) state[i] = b.HIGH\n        else state[i] = b.LOW\n        b.digitalWrite(leds[i], state[i])\n    }\n\n    function setState(i, state) {\n        if (state == 'ON') b.digitalWrite(leds[i], b.HIGH)\n        else b.digitalWrite(leds[i], b.LOW)\n    }\n</code></pre>\n<p>Para hacer conexión con el servidor podemos utilizar un navegador web y conectar\na la siguiente dirección &#x3C;DIRECCION<em>IP</em>BEAG>:3001/USR0?1.</p>",frontmatter:{title:"API GPIO en una Beaglebone Black",author:"Maximiliano Valencia",date:"04 March, 2018"}}},pathContext:{slug:"/posts/gpio_api_beaglebone_black/"}}}});
//# sourceMappingURL=path---posts-gpio-api-beaglebone-black-207a508c742c861ab5c1.js.map